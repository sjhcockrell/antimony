#!/bin/sh

#  antimony 
#
#  A simple script that will generate 'ttf', 'eot', and 'woff'
#  font formats suitable for displaying webfonts. 
#
#  I use it in conjunction with Glyphs Mini, which exports an 
#  'otf' font format, to create icon sets.
#
#  Named for Antimony (Sb), Atomic Number 51, a hardening
#  element added to lead type to create sharp edges.

# {
NORMAL=$(tput sgr0)
BOLD=$(tput bold)
UNDERLINE=$(tput smul)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)

indent () {
    i=$1 
    while [ $i -gt 0 ]
    do
        printf "    "
        i=$(( $i - 1 ))
    done
}
title () {
    printf "\n${BOLD}$1${NORMAL}\n"
}

subtitle () {
    printf "${UNDERLINE}$1${NORMAL}\n"
}

task () {
    indent 1
    printf "$1...\n"
}

line () {
    printf -- "$1\n"
}

complete () {
    indent 1
    printf "${GREEN}Done.${NORMAL}\n\n"
}

error () {
    printf "${RED}${UNDERLINE}Error:${NORMAL} $1\n\n"
    exit 1
}
# }



# USAGE {
#
# Invoked when `antimony` called without arguments,
# or when a suppied with `--help` or `-h` flags.
usage () {
    title "Simple command line font conversion."
    line "\nusage:  antimony [FONT.otf]"
    indent 2
    line "antimony [FONT.otf] --export [options]\n"

    line '--export, -e [ttf,svg,eot,woff]'
    indent 2
    line "Accepts a comma-separated list of file formats to export."
    printf "\n"
    
    line "--help, -h"
    indent 2
    line "Prints this menu. Woohoo!"
    printf "\n"

    exit 1
}
# } 

title "[Sb] Antimony"


# NEEDS TO CHECK FOR:
#     there are arguments
#     first arg file exists
#     first arg file is an `otf` file

if [ $# -eq 0 ]; then
    usage
fi

if [ -ne $1 ]; then
    error "Can't find that file. Check the path?"
fi


FILE_PATH=`dirname $1`
FILE_NAME=`basename $1 .otf`



# Check for file exist, then convert
if [ -e $1 ]; then 

    subtitle "Building .ttf, .svg, .woff, .eot"

    task "Making .ttf"
    fontforge -lang=ff -c "Open('$1');Generate('$1':r+'.ttf');Quit(0);" > /dev/null 2>&1
    complete

    task "Making .svg"
    fontforge -lang=ff -c "Open('$1');Generate('$1':r+'.svg');Quit(0);" > /dev/null 2>&1
    complete


    task "Making .eot"
    ttf2eot < $FILE_PATH/$FILE_NAME.ttf > $FILE_PATH/$FILE_NAME.eot 2>&1
    complete

    task "Making .woff"
    sfnt2woff $1 > $FILE_PATH/$FILE_NAME.woff 2>&1
    complete

else
    error "Can't find that file. Check your path?"
fi
# } end scripting

exit 0
